Step 0: Build a Community
=========================

In a [[recent blogpost|http://blog.friocorte.com/2011/04/bootstrapping-a-rhel-clone.html]] I discussed what would be needed to start a rebuild project based on sources provided by a prominent Linux distribution.

Some friends and I started working towards this goal and quickly determined that the technical problems and hardware needs for such a venture are the easy part. Much more difficult is task of building a community.

Community is Key
----------------

The key to any vibrant Open Source project is the community behind the project. Without a living, breathing community, any project is doomed to end up dead.

Analyzing other Open Source projects out there I discovered there are two distinct communities involved with any "successful" project. The contributor community and the user community. And yes one is a sub-set of the other(or ideally would be). These two communities are symbiotic as well.

Contributor Community
---------------------

The contributor community is the core of a project. It consists of volunteers working on task relating to the creation, improvement, and release of a project. Without the contributor community the project could not exist. This isn't to say the contributor community works in a vacuum. The contributor community relies on the user community for a few things:

* First and foremost: Validation. Working on an Open Source project is a labor of love. Volunteers give a great deal of their time, talent, and work to an Open Source project. A vibrant user community validates the work of the contributors.

* Second: User base. A project without users is a business without customers. No users; no project. The more users a project has the more willing contributors will be willing to work on the project.

* Third: Feedback. There's an old maxim: "Many hands make light work." The Open Source equivalent to this is "Under many eyes, all bugs are shallow". The larger the install base, the more likely quality bug reports will be generated and problems will be found and fixed.

User Community
--------------

The other half of the project exists in the user community. The user community consists of those who download, install and use the project in their daily work. The user community depends on the contributor community for few things as well.

* Number one: A Quality Product. People are using large Open Source projects in the core infrastructure of their businesses. A quality product makes this possible.

* Second: Transparency. Given the importance of a quality product. Users are eager for updates. These can be either security updates, new features, new releases, or just "we're working on these problems". When you develop your project "in the dark" users will start to get leery. If you miss big releases regularly they start to loose confidence. Fear of a dying project can lead users to find alternatives or to fork the project themselves.

* Finally: Permanence. The user community depends on the contributor community for permanence. Open Source projects are living things and require constant care and feeding. They have their own life cycle. Open Source projects are created by volunteer forces. Those volunteers' priorities change, they move on -for whatever reason. A completely open development model helps overcome these speed bumps that can affect a project. Some recent events come to mind with regard to the movement of a community (OpenSolaris to OpenIndinana/Nexenta/etc, and OpenOffice.org to LibreOffice to Apache open office for example). Another item to think about is reducing the "bus factor". The access to the entire project should not be limited to one member of the contributor community. It should be available to all of the core trusted team (See CentOS admin goes missing).
  
  The ultimate answer however is to make the entire project *VERY* easy to fork. Using the new distributed SCM tools makes this pretty easy. The ideal Open Source project should be able to be completely forked in a weekend at the longest.

Community Trust
---------------

When the user community and contributor community trust each other things really start to happen. More contributors show up to help as they feel valued and want to participate. The stronger contributor community means a higher quality, better trusted project. The higher quality project then attracts more users and the feedback cycle grows. The output of this feedback cycle is better support, and a better product (the afore mentioned bugreports).


